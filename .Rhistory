x = [2,3,1,4,76,8,4,2,5,6]
x = c(2,3,1,4,76,8,4,2,5,6)
x
above10(x)
above10 function(x){
use <- x>10
x[use]
}
above10 function(x){
use <- x>10
x[use]
}
above10(x)
above10 <- function(x){
use <- x>10
x[use]
}
above10(x)
us
use
install.packages("swirl")
library("swirl")
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package)
summarize(by_package,mean(size))
submit()
pack_sun
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sortedarrange(top_counts, desc(count))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
mutate(class = extract_numeric(class))
mutate(students3, class = extract_numeric(class))
submit()
mutate(students3, class = extract_numeric(as.character(class)))
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutated(failed, status ="failed")
failed <- mutate(failed, status ="failed")
bind_rows(passed, failed)
sat
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920\1\2")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 0, minutes = 8)
this_moment <- update(this_moment, hours = 0, minutes = 8)
this_moment
?now
now(time_zone="America/New_York")
now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(20)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz()
?with_tz
arrive <- with_tz(arrive, tzone = " Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(arrive, last_time)
how_long <- new_interval(last_time, arrive)
how_long
as.period(how_long)
stopwatch()
setwd("~/Documents/Coursera/Data Scientists Toolbox/Exploratory Data Analysis/Programming Assignment 1")
plot2 <- data[(data$Date == date1) | (data$Date == date2),]
Final_Data <- plot2
Final_Data <- mutate(Final_Data, Week_Time = paste(Week, Time, sep =" "))
Final_Data$Week_Time <- ymd_hms(Final_Data$Week_Time)
png(filename = "Plot2.png", width = 480, height = 480)
plot(Final_Data$Week_Time, Final_Data$Global_active_power, type="l", ylab = "Global Active Power (kilowatts)", xlab=" ")
dev.off()
library(lubridate)
dataFile = "household_power_consumption.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
data$Date <- dmy(data$Date)
data$Date <- ymd(data$Date)
date1 = as.POSIXct("2007-02-01", tz="UTC")
date2 = as.POSIXct("2007-02-02", tz="UTC")
plot2 <- data[(data$Date == date1) | (data$Date == date2),]
Final_Data <- plot2
Final_Data <- mutate(Final_Data, Week_Time = paste(Week, Time, sep =" "))
Final_Data$Week_Time <- ymd_hms(Final_Data$Week_Time)
png(filename = "Plot2.png", width = 480, height = 480)
plot(Final_Data$Week_Time, Final_Data$Global_active_power, type="l", ylab = "Global Active Power (kilowatts)", xlab=" ")
dev.off()
library(lubridate)
library(dplyr)
dataFile = "household_power_consumption.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
data$Date <- dmy(data$Date)
data$Date <- ymd(data$Date)
date1 = as.POSIXct("2007-02-01", tz="UTC")
date2 = as.POSIXct("2007-02-02", tz="UTC")
plot2 <- data[(data$Date == date1) | (data$Date == date2),]
Final_Data <- plot2
Final_Data <- mutate(Final_Data, Week_Time = paste(Week, Time, sep =" "))
Final_Data$Week_Time <- ymd_hms(Final_Data$Week_Time)
png(filename = "Plot2.png", width = 480, height = 480)
plot(Final_Data$Week_Time, Final_Data$Global_active_power, type="l", ylab = "Global Active Power (kilowatts)", xlab=" ")
dev.off()
head(Final_Data)
Final_Data <- mutate(Final_Data, Week_Time = paste(Week, Time, sep =" "))
Final_Data <- mutate(Final_Data, Week = weekdays(Date))
Final_Data <- mutate(Final_Data, Week_Time = paste(Week, Time, sep =" "))
Final_Data$Week_Time <- ymd_hms(Final_Data$Week_Time)
png(filename = "Plot2.png", width = 480, height = 480)
plot(Final_Data$Week_Time, Final_Data$Global_active_power, type="l", ylab = "Global Active Power (kilowatts)", xlab=" ")
dev.off()
Final_Data <- plot2
Final_Data <- mutate(Final_Data, Week = weekdays(Date))
Final_Data <- mutate(Final_Data, Week_Time = paste(Week, Time, sep =" "))
head(Final_Data$Week_Time)
Final_Data <- plot2
Final_Data <- mutate(Final_Data, Week = weekdays(Date))
Final_Data <- mutate(Final_Data, Week_Time = paste(Date, Time, sep =" "))
head(Final_Data$Week_Time)
Final_Data$Week_Time <- ymd_hms(Final_Data$Week_Time)
png(filename = "Plot2.png", width = 480, height = 480)
plot(Final_Data$Week_Time, Final_Data$Global_active_power, type="l", ylab = "Global Active Power (kilowatts)", xlab=" ")
dev.off()
png(filename = "Plot3.png", width = 480, height = 480)
plot(Final_Data$Week_Time, Final_Data$Sub_metering_1, type="l" )
lines(Final_Data$Week_Time, Final_Data$Sub_metering_2, col="red")
lines(Final_Data$Week_Time, Final_Data$Sub_metering_3, col="blue")
dev.off()
png(filename = "Plot3.png", width = 480, height = 480, quality = 75)
plot(Final_Data$Week_Time, Final_Data$Sub_metering_1, type="l" )
lines(Final_Data$Week_Time, Final_Data$Sub_metering_2, col="red")
lines(Final_Data$Week_Time, Final_Data$Sub_metering_3, col="blue")
dev.off()
png(filename = "Plot3.png", width = 480, height = 480)
plot(Final_Data$Week_Time, Final_Data$Sub_metering_1, type="l" )
lines(Final_Data$Week_Time, Final_Data$Sub_metering_2, col="red")
lines(Final_Data$Week_Time, Final_Data$Sub_metering_3, col="blue")
dev.off()
